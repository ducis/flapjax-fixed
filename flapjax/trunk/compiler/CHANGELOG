Flapjax Compiler, SVN
---------------------

+ Initialization values on the right of a triple-stick (`|||') were getting
  dropped during parsing.  They are now correctly displayed.
+ Fixed an issue where deeply-nested assignment operators were not correctly
  lifted.
+ Fixed an issue where the onload attribute on a page was getting clobbered.
+ Fixed a spurious error message that was generated by the Makefile.
+ Fixed an issue in the HTML parser with parsing XML-style unitary tags.
+ Added the --standalone and --loader flags to compile Javascript that is not
  embedding in HTML.

Flapjax Compiler 2.0, Initial Release
-------------------------------------

+ Complete rewrite in Haskell, using homegrown HTML and Javascript parsing
  libraries.  GHC 6.6 is the compiler we use, and the sources make use of
  various well-established GHC language-extensions that are not part of the
  Haskell '98 standard.
  
+ The Javascript parser is based on the earlier parsing library, so there
  aren't any differences in the way Javascript is parsed.
  
+ The HTML parser is not as permissive as the previous parser.  It doesn't 
  attempt to correct structural errors.  This may be reinstated if there is
  `popular demand,' but I believe it makes it unnecessarily complicated.
  
+ Time-varying attribute values are no longer enclosed in double-quotes.
  When earlier, one would write <tag attrib="{! value !}" ...>, now one
  writes <tag attrib={! value !} ...>.
  
+ The initial value after a triple stick is syntactically restricted to being 
  a single HTML entity.
  
+ The expressions in curly-bangs are syntactically restricted to being 
  Javascript expressions (and not statements).  This is the intended behavior
  that couldn't not be enforced in the earlier compiler.
